// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VueStart;

#nullable disable

namespace VueStart.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220430054719_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "AQAAAAEAACcQAAAAEAr9Z9CH3Tr4ULztb8HHSh5S/bWyk+UAwvXGRtBh1B9C6i1cUwRQaYUHM7KyNcgxGA==",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("VueStart.ClientError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ClientErrors");
                });

            modelBuilder.Entity("VueStart.ProfilerRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<long>("Database")
                        .HasColumnType("bigint");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<long>("Download")
                        .HasColumnType("bigint");

                    b.Property<long>("Generate")
                        .HasColumnType("bigint");

                    b.Property<long>("GeoLocation")
                        .HasColumnType("bigint");

                    b.Property<int>("Period")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ProfilerRecords");
                });

            modelBuilder.Entity("VueStart.ServerError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("File")
                        .HasColumnType("text");

                    b.Property<int>("HResult")
                        .HasColumnType("integer");

                    b.Property<int>("Line")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ServerErrors");
                });

            modelBuilder.Entity("VueStart.StatisticRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BootstrapEditableDownloadedCount")
                        .HasColumnType("integer");

                    b.Property<int>("BootstrapEditableGeneratedCount")
                        .HasColumnType("integer");

                    b.Property<int>("BootstrapReadonlyDownloadedCount")
                        .HasColumnType("integer");

                    b.Property<int>("BootstrapReadonlyGeneratedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FirstUse")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Hash")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUse")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TailwindEditableDownloadedCount")
                        .HasColumnType("integer");

                    b.Property<int>("TailwindEditableGeneratedCount")
                        .HasColumnType("integer");

                    b.Property<int>("TailwindReadonlyDownloadedCount")
                        .HasColumnType("integer");

                    b.Property<int>("TailwindReadonlyGeneratedCount")
                        .HasColumnType("integer");

                    b.Property<int>("VanillaEditableDownloadedCount")
                        .HasColumnType("integer");

                    b.Property<int>("VanillaEditableGeneratedCount")
                        .HasColumnType("integer");

                    b.Property<int>("VanillaReadonlyDownloadedCount")
                        .HasColumnType("integer");

                    b.Property<int>("VanillaReadonlyGeneratedCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("StatisticRecords");
                });

            modelBuilder.Entity("VueStart.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<int>("Period")
                        .HasColumnType("integer");

                    b.Property<int?>("VisitorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VisitorId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("VueStart.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BrowserFamily")
                        .HasColumnType("text");

                    b.Property<string>("BrowserMajor")
                        .HasColumnType("text");

                    b.Property<string>("BrowserMinor")
                        .HasColumnType("text");

                    b.Property<string>("Citation")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("DeviceBrand")
                        .HasColumnType("text");

                    b.Property<string>("DeviceFamily")
                        .HasColumnType("text");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("text");

                    b.Property<DateTime>("FirstVisit")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OSFamily")
                        .HasColumnType("text");

                    b.Property<string>("OSMajor")
                        .HasColumnType("text");

                    b.Property<string>("OSMinor")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserAgent")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("VueStart.Visit", b =>
                {
                    b.HasOne("VueStart.Visitor", null)
                        .WithMany("Visits")
                        .HasForeignKey("VisitorId");
                });

            modelBuilder.Entity("VueStart.Visitor", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
