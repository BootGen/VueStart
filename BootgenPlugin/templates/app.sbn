<template>
  <div class="container-fluid">
  {{~ for class in classes
      if class.is_root ~}}
    <{{ kebab_case class.name }}-list v-model="{{ camel_case class.name }}List"></{{ kebab_case class.name }}-list>
  {{~ end
      end ~}}
  </div>
</template>

<script>
import { defineComponent, ref, watchEffect } from 'vue';
{{~ for class in classes
    if class.is_root ~}}
import {{ class.name }}List from './components/{{ class.name }}List.vue';
{{~ end
    end ~}}

export default defineComponent({
  name: 'App',
  components: { {{ for class in classes }}{{ if class.is_root }}{{ class.name }}List{{ if !for.last }},{{ end }}{{ end }}{{ end }} },
  setup: function () {
    {{~ for class in classes
        if class.is_root ~}}
    const {{ camel_case class.name }}List = ref([]);
    {{~ end
        end ~}}
    
    function toDataModel(data) {
      return data.map((val, idx) => {
        const v = { ... val }
        for (const property in v) {
          if(Array.isArray(v[property])){
            v[property] = toDataModel(v[property]);
          }
        }
        return {
          id: idx,
          value: v
        }
      })
    }
    function toSimpleArray(data) {
      let arr =  data.map(val => {
        return { ...val.value }
      })
      arr.forEach(item => {
        for (const property in item) {
          if(Array.isArray(item[property])){
            item[property] = toSimpleArray(item[property]);
          }
        }
      })
      return arr;
    }
    function saveToLocalStorage(newValue) {
        let minimized = JSON.stringify(newValue);
        let oldValue = localStorage.getItem('json');
        if (minimized != oldValue) {
          localStorage.setItem('json', minimized);
        }
    }
    function loadFromLocalStorage() {
      let json = localStorage.getItem('json');
      if (json) {
        const users = JSON.parse(json).users;
        if (users) {
          userList.value = toDataModel(users);
        }
      }
    }
    loadFromLocalStorage();

    watchEffect(() => {
      saveToLocalStorage({
        {{~ for class in classes
            if class.is_root ~}}
        {{ camel_case class.name.plural }}: toSimpleArray({{ camel_case class.name }}List.value)
        {{~ end
            end ~}}
      });
    })

    window.addEventListener('storage', loadFromLocalStorage);
    return { {{ for class in classes }}{{ if class.is_root }}{{ camel_case class.name }}List{{ if !for.last }}, {{ end }}{{end}}{{end}} }
  },
});
</script>

<style>
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
}
</style>
